{"version":3,"sources":["../src sync /^.*$","App.test.js","setupTests.js","styled-components.js","assets/TeamBuilder1.png","assets/TeamBuilder2.png","assets/TeamBuilder3.png","assets/TeamBuilder4.png","assets/TeamBuilder5.png","logo.svg","Models.js","App.js","team_images/adam-friedman.jpg","team_images/ceci-clarke.jpg","team_images/courtney-lacy.jpg","team_images/jon-cromwell.jpg","team_images/kirsten-pearson.jpg","team_images/michael-carter.jpg","index.js","TeamSelectDialog.js","BuildYourTeam.js","serviceWorker.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","test","linkElement","getByText","render","expect","toBeInTheDocument","ScardContent","styled","CardContent","SformHelperText","FormHelperText","props","error","Spaper","Paper","team","Sdialog","withStyles","theme","root","minHeight","maxHeight","Dialog","SdialogContent","padding","spacing","overflow","DialogContent","SdialogActions","margin","DialogActions","SdialogTitle","fontSize","DialogTitle","Market","SoCal","NorCal","Role","AccountExecutive","HeadOfConstruction","Concierge","People","name","role","markets","profilePic","roles","App","useState","isDialogOpen","setIsDialogOpen","open","saveTeam","params","ReactDOM","document","getElementById","serviceWorker","initialTeamValue","reduce","accumulator","initalAvailableTeamMembersValue","TeamSelectDialog","setTeam","isValid","setIsValid","expanded","setExpanded","marketSelected","setMarketSelected","availableTeamMembers","setAvailableTeamMembers","useEffect","people","filterPeopleByMarket","sortAndSetByRole","validation","values","every","get","filteredPeople","forEach","person","prevState","filter","includes","handleTeamMemberChange","member","event","target","checked","data-testid","fullWidth","maxWidth","aria-labelledby","dividers","container","item","xs","value","onChange","displayEmpty","market","key","justify","title","variant","component","subheader","color","gutterBottom","alt","src","require","options","disabled","panel","isExpanded","expandIcon","aria-controls","control","label","alignItems","onClick","BuildYourTeam","isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","headers","then","response","contentType","status","indexOf","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess"],"mappings":"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","file":"static/js/main.d6701208.chunk.js","sourcesContent":["var map = {\n\t\".\": 47,\n\t\"./\": 47,\n\t\"./App\": 42,\n\t\"./App.js\": 42,\n\t\"./App.test\": 103,\n\t\"./App.test.js\": 103,\n\t\"./BuildYourTeam\": 66,\n\t\"./BuildYourTeam.js\": 66,\n\t\"./Models\": 32,\n\t\"./Models.js\": 32,\n\t\"./TeamSelectDialog\": 65,\n\t\"./TeamSelectDialog.js\": 65,\n\t\"./assets/TeamBuilder1.png\": 293,\n\t\"./assets/TeamBuilder2.png\": 294,\n\t\"./assets/TeamBuilder3.png\": 295,\n\t\"./assets/TeamBuilder4.png\": 296,\n\t\"./assets/TeamBuilder5.png\": 297,\n\t\"./index\": 47,\n\t\"./index.js\": 47,\n\t\"./logo.svg\": 298,\n\t\"./serviceWorker\": 67,\n\t\"./serviceWorker.js\": 67,\n\t\"./setupTests\": 104,\n\t\"./setupTests.js\": 104,\n\t\"./styled-components\": 17,\n\t\"./styled-components.js\": 17,\n\t\"./team_images/adam-friedman.jpg\": 442,\n\t\"./team_images/ceci-clarke.jpg\": 443,\n\t\"./team_images/courtney-lacy.jpg\": 444,\n\t\"./team_images/jon-cromwell.jpg\": 445,\n\t\"./team_images/kirsten-pearson.jpg\": 446,\n\t\"./team_images/michael-carter.jpg\": 447\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 102;","import React from 'react';\nimport { render } from '@testing-library/react';\nimport App from './App';\n\ntest('renders learn react link', () => {\n  const { getByText } = render(<App />);\n  const linkElement = getByText(/learn react/i);\n  expect(linkElement).toBeInTheDocument();\n});\n","// jest-dom adds custom jest matchers for asserting on DOM nodes.\n// allows you to do things like:\n// expect(element).toHaveTextContent(/react/i)\n// learn more: https://github.com/testing-library/jest-dom\nimport '@testing-library/jest-dom/extend-expect';\n","// ! External\n\nimport styled from \"styled-components\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n    CardContent,\n    FormHelperText,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Paper\n} from \"@material-ui/core\";\n\nexport const ScardContent = styled(CardContent)`\n    min-height: 2.5em;\n`;\n\nexport const SformHelperText = styled(FormHelperText)`\n    color: ${props => (props.error ? \"red\" : \"inherit\")};\n`;\n\nexport const Spaper = styled(Paper)`\n    margin: 2rem 0;\n    padding: ${props => (props.team ? \"2rem\" : \"auto\")};\n`;\n\nexport const Sdialog = withStyles(theme => ({\n    root: {\n        minHeight: \"80vh\",\n        maxHeight: \"90vh\"\n    }\n}))(Dialog);\n\nexport const SdialogContent = withStyles(theme => ({\n    root: {\n        padding: theme.spacing(2),\n        overflow: \"scroll\"\n    }\n}))(DialogContent);\n\nexport const SdialogActions = withStyles(theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1)\n    }\n}))(DialogActions);\n\nexport const SdialogTitle = withStyles(theme => ({\n    root: {\n        fontSize: \"3rem\",\n        margin: 0,\n        padding: \"1rem\"\n    }\n}))(DialogTitle);\n","module.exports = __webpack_public_path__ + \"static/media/TeamBuilder1.6c813e23.png\";","module.exports = __webpack_public_path__ + \"static/media/TeamBuilder2.d7be364a.png\";","module.exports = __webpack_public_path__ + \"static/media/TeamBuilder3.c1d1b57c.png\";","module.exports = __webpack_public_path__ + \"static/media/TeamBuilder4.a4a169bb.png\";","module.exports = __webpack_public_path__ + \"static/media/TeamBuilder5.696a25e3.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const Market = {\n    SoCal: \"SoCal\",\n    NorCal: \"NorCal\"\n};\n\nexport const Role = {\n    AccountExecutive: \"Account Executive\",\n    HeadOfConstruction: \"Head Of Construction\",\n    Concierge: \"Concierge\"\n};\n\nexport const People = [\n    {\n        name: \"Adam Friedman\",\n        role: Role.AccountExecutive,\n        markets: [Market.NorCal, Market.SoCal],\n        profilePic: \"./team_images/adam-friedman.jpg\"\n    },\n    {\n        name: \"Ceci Clark\",\n        role: Role.HeadOfConstruction,\n        markets: [Market.SoCal],\n        profilePic: \"./team_images/ceci-clarke.jpg\"\n    },\n    {\n        name: \"Courtney Lacy\",\n        role: Role.Concierge,\n        markets: [Market.NorCal, Market.SoCal],\n        profilePic: \"./team_images/courtney-lacy.jpg\"\n    },\n    {\n        name: \"John Cromwell\",\n        role: Role.HeadOfConstruction,\n        markets: [Market.NorCal],\n        profilePic: \"./team_images/jon-cromwell.jpg\"\n    },\n    {\n        name: \"Kirsten Pearson\",\n        role: Role.Concierge,\n        markets: [Market.SoCal],\n        profilePic: \"./team_images/kirsten-pearson.jpg\"\n    },\n    {\n        name: \"Michael Carter\",\n        role: Role.AccountExecutive,\n        markets: [Market.NorCal],\n        profilePic: \"./team_images/michael-carter.jpg\"\n    }\n];\n\nexport const markets = [\"SoCal\", \"NorCal\"];\nexport const roles = [\"Account Executive\", \"Head Of Construction\", \"Concierge\"];\n","// ! External\n\nimport React, { useState } from \"react\";\n\n// ! Internal\n\nimport TeamSelectDialog from \"./TeamSelectDialog.js\";\nimport BuildYourTeam from \"./BuildYourTeam.js\";\n\nfunction App() {\n    // ! Methods\n\n    const saveTeam = params => {};\n\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n    return (\n        <div>\n            <BuildYourTeam setIsDialogOpen={setIsDialogOpen} />\n            {isDialogOpen && (\n                <TeamSelectDialog\n                    open={isDialogOpen}\n                    saveTeam={saveTeam}\n                    setIsDialogOpen={setIsDialogOpen}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","module.exports = __webpack_public_path__ + \"static/media/adam-friedman.52d53a7c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ceci-clarke.5c667fa9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/courtney-lacy.cbd26a2c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jon-cromwell.72f12f6b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kirsten-pearson.07fcb568.jpg\";","module.exports = __webpack_public_path__ + \"static/media/michael-carter.b7fb3a38.jpg\";","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// ! External\n\nimport { get } from \"lodash\";\nimport { bool, func } from \"prop-types\";\nimport { Close, CheckCircle, ExpandMore, Person } from \"@material-ui/icons\";\nimport {\n    Avatar,\n    Card,\n    Grid,\n    CardHeader,\n    Checkbox,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    FormControl,\n    FormControlLabel,\n    FormGroup,\n    FormLabel,\n    IconButton,\n    MenuItem,\n    Typography,\n    Select\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\n\n// ! Internal\n\nimport { markets, roles, People } from \"./Models\";\n\nimport {\n    ScardContent,\n    Sdialog,\n    SdialogActions,\n    SdialogContent,\n    SdialogTitle,\n    SformHelperText,\n    Spaper\n} from \"./styled-components.js\";\n\n// * use roles to create keys for team value object\nconst initialTeamValue = () => {\n    return roles.reduce((accumulator, role) => {\n        accumulator[role] = {\n            role\n        };\n        return accumulator;\n    }, {});\n};\n\n// * use roles to create keys for available team members object\nconst initalAvailableTeamMembersValue = () => {\n    return roles.reduce((accumulator, role) => {\n        accumulator[role] = [];\n        return accumulator;\n    }, {});\n};\n\nexport default function TeamSelectDialog({ open, saveTeam, setIsDialogOpen }) {\n    // ! State\n\n    const [team, setTeam] = useState(initialTeamValue());\n    const [isValid, setIsValid] = useState(false);\n    const [expanded, setExpanded] = useState(\"\");\n    const [marketSelected, setMarketSelected] = useState(\"\");\n    const [availableTeamMembers, setAvailableTeamMembers] = useState(\n        initalAvailableTeamMembersValue\n    );\n\n    // ! Effects\n    // * watch for changes to marketSelected to reset team to initial\n    // * and filter people by market\n    useEffect(() => {\n        if (marketSelected) {\n            setTeam(initialTeamValue());\n            const people = filterPeopleByMarket();\n            sortAndSetByRole(people);\n        }\n    }, [marketSelected]);\n\n    // * watch for changes to team and validate on change\n    useEffect(() => {\n        // * check each value on team to see if it has a name\n        const validation = Object.values(team).every(role =>\n            get(role, \"name\", false)\n        );\n        setIsValid(validation);\n    }, [team]);\n\n    // ! Methods\n\n    const sortAndSetByRole = (filteredPeople = []) => {\n        filteredPeople.forEach(person => {\n            setAvailableTeamMembers(prevState => {\n                return {\n                    ...prevState,\n                    [person.role]: [...prevState[person.role], person]\n                };\n            });\n        });\n    };\n\n    const filterPeopleByMarket = () => {\n        return People.filter(person => person.markets.includes(marketSelected));\n    };\n\n    const handleMarketChange = event => {\n        // * reset availableTeamMembers on market change\n        setAvailableTeamMembers(initalAvailableTeamMembersValue());\n        setMarketSelected(event.target.value);\n    };\n\n    const handlePanelClick = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    const handleTeamMemberChange = member => event => {\n        // * handled check based on whether member was checked/unchecked\n        if (event.target.checked) {\n            setTeam(prevState => {\n                return { ...prevState, [member.role]: member };\n            });\n        } else {\n            setTeam(prevState => {\n                return { ...prevState, [member.role]: { role: member.role } };\n            });\n        }\n    };\n\n    return (\n        <Sdialog\n            data-testid=\"select-team-dialog\"\n            id=\"select-team-dialog\"\n            fullWidth\n            maxWidth=\"lg\"\n            aria-labelledby=\"team-select-dialog-title\"\n            open={open}\n        >\n            <SdialogTitle\n                id=\"team-select-dialog-title\"\n                data-testid=\"team-select-dialog-title\"\n            >\n                Build Your Team\n            </SdialogTitle>\n            <SdialogContent dividers>\n                <Spaper team>\n                    <Grid container spacing={1}>\n                        <Grid item xs>\n                            <FormControl>\n                                <Select\n                                    data-testid=\"select-market\"\n                                    value={marketSelected}\n                                    onChange={handleMarketChange}\n                                    name=\"Region\"\n                                    displayEmpty\n                                >\n                                    {markets.map(market => (\n                                        <MenuItem\n                                            data-testid={`menu-item-market-${market}`}\n                                            key={market}\n                                            value={market}\n                                        >\n                                            {market}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n\n                                <SformHelperText error={!marketSelected}>\n                                    Select Your Region\n                                </SformHelperText>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <Grid container justify=\"center\" spacing={3}>\n                                {Object.values(team).map(role => (\n                                    <Grid item xs>\n                                        <Card\n                                            data-testid={`team-member-role-card-${role}`}\n                                        >\n                                            <CardHeader\n                                                title={\n                                                    <Typography\n                                                        variant=\"h5\"\n                                                        component=\"h2\"\n                                                    >\n                                                        {role.role}\n                                                    </Typography>\n                                                }\n                                                subheader={\n                                                    <Typography\n                                                        color=\"textSecondary\"\n                                                        gutterBottom\n                                                    >\n                                                        {get(\n                                                            role,\n                                                            \"name\",\n                                                            false\n                                                        )\n                                                            ? role.name\n                                                            : \"None Selected\"}\n                                                    </Typography>\n                                                }\n                                            ></CardHeader>\n                                            <ScardContent>\n                                                {!get(\n                                                    role,\n                                                    \"profilePic\",\n                                                    false\n                                                ) ? (\n                                                    <Person></Person>\n                                                ) : (\n                                                    <Avatar\n                                                        alt={`${role.name} a ${role.role}`}\n                                                        src={require(`${role.profilePic}`)}\n                                                    />\n                                                )}\n                                            </ScardContent>\n                                        </Card>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Spaper>\n                <Spaper options>\n                    {roles.map(role => (\n                        <ExpansionPanel\n                            data-testid={`available-team-members-by-role-panel-${role}`}\n                            disabled={!marketSelected}\n                            key={role}\n                            expanded={expanded === role}\n                            onChange={handlePanelClick(role)}\n                        >\n                            <ExpansionPanelSummary\n                                expandIcon={<ExpandMore />}\n                                aria-controls={`${role}-content`}\n                                id={`${role}-header`}\n                            >\n                                <Typography>{role}</Typography>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <FormControl component=\"fieldset\">\n                                    <FormLabel component=\"legend\">\n                                        Select One\n                                    </FormLabel>\n                                    <FormGroup>\n                                        {availableTeamMembers[role].map(\n                                            member => (\n                                                <Grid container spacing={2}>\n                                                    <Grid item>\n                                                        <FormControlLabel\n                                                            control={\n                                                                <Checkbox\n                                                                    data-testid={`team-member-${role}-${member.name}`}\n                                                                    checked={\n                                                                        team[\n                                                                            member\n                                                                                .role\n                                                                        ]\n                                                                            .name ===\n                                                                        member.name\n                                                                    }\n                                                                    onChange={handleTeamMemberChange(\n                                                                        member\n                                                                    )}\n                                                                    value={\n                                                                        member\n                                                                    }\n                                                                />\n                                                            }\n                                                            label={\n                                                                <Grid\n                                                                    container\n                                                                    spacing={2}\n                                                                    alignItems=\"center\"\n                                                                >\n                                                                    <Grid item>\n                                                                        <Avatar\n                                                                            alt={\n                                                                                member.name\n                                                                            }\n                                                                            src={require(`${member.profilePic}`)}\n                                                                        />\n                                                                    </Grid>\n                                                                    <Grid item>\n                                                                        {\n                                                                            member.name\n                                                                        }\n                                                                    </Grid>\n                                                                </Grid>\n                                                            }\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                            )\n                                        )}\n                                    </FormGroup>\n                                </FormControl>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                    ))}\n                </Spaper>\n            </SdialogContent>\n            <SdialogActions>\n                <IconButton onClick={() => setIsDialogOpen(false)}>\n                    <Close></Close>\n                </IconButton>\n                <IconButton disabled={!isValid} onClick={saveTeam}>\n                    <CheckCircle></CheckCircle>\n                </IconButton>\n            </SdialogActions>\n        </Sdialog>\n    );\n}\n\nTeamSelectDialog.propTypes = {\n    open: bool,\n    saveTeam: func,\n    setIsDialogOpen: func\n};\n","// ! External\n\nimport React from \"react\";\nimport { Button, Grid } from \"@material-ui/core\";\n\nfunction BuildYourTeam({ setIsDialogOpen }) {\n    return (\n        <Grid\n            data-testid=\"build-your-team-button\"\n            id=\"build-your-team-button\"\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n        >\n            <Grid item>\n                <Button\n                    data-testid={\"button-build-your-team\"}\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    onClick={() => {\n                        setIsDialogOpen(true);\n                    }}\n                >\n                    Build Your Team!\n                </Button>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default BuildYourTeam;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}